# Generated by Django 3.2.4 on 2021-08-20 06:38

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ImQzAnalysis',
            fields=[
                ('anlys_key', models.AutoField(db_column='ANLYS_KEY', primary_key=True, serialize=False)),
                ('file_key', models.IntegerField(blank=True, db_column='FILE_KEY', null=True)),
                ('user_key', models.IntegerField(blank=True, db_column='USER_KEY', null=True)),
                ('qz_group', models.IntegerField(blank=True, db_column='QZ_GROUP', null=True)),
                ('qz_num', models.IntegerField(blank=True, db_column='QZ_NUM', null=True)),
                ('group_code', models.IntegerField(blank=True, db_column='GROUP_CODE', null=True)),
                ('face_check', models.CharField(blank=True, db_column='FACE_CHECK', max_length=45, null=True)),
                ('sound_check', models.CharField(blank=True, db_collation='latin1_swedish_ci', db_column='SOUND_CHECK', max_length=45, null=True)),
                ('emotion_surprise', models.FloatField(blank=True, db_column='EMOTION_SURPRISE', null=True)),
                ('emotion_fear', models.FloatField(blank=True, db_column='EMOTION_FEAR', null=True)),
                ('emotion_aversion', models.FloatField(blank=True, db_column='EMOTION_AVERSION', null=True)),
                ('emotion_happy', models.FloatField(blank=True, db_column='EMOTION_HAPPY', null=True)),
                ('emotion_sadness', models.FloatField(blank=True, db_column='EMOTION_SADNESS', null=True)),
                ('emotion_angry', models.FloatField(blank=True, db_column='EMOTION_ANGRY', null=True)),
                ('emotion_neutral', models.FloatField(blank=True, db_column='EMOTION_NEUTRAL', null=True)),
                ('gaze', models.CharField(blank=True, db_collation='latin1_swedish_ci', db_column='GAZE', max_length=5000, null=True)),
                ('face_angle', models.FloatField(blank=True, db_column='FACE_ANGLE', null=True)),
                ('shoulder_angle', models.FloatField(blank=True, db_column='SHOULDER_ANGLE', null=True)),
                ('left_shoulder', models.CharField(blank=True, db_collation='latin1_swedish_ci', db_column='LEFT_SHOULDER', max_length=5000, null=True)),
                ('left_shoulder_move_count', models.IntegerField(blank=True, db_column='LEFT_SHOULDER_MOVE_COUNT', null=True)),
                ('right_shoulder', models.CharField(blank=True, db_collation='latin1_swedish_ci', db_column='RIGHT_SHOULDER', max_length=5000, null=True)),
                ('right_shoulder_move_count', models.IntegerField(blank=True, db_column='RIGHT_SHOULDER_MOVE_COUNT', null=True)),
                ('center_shoulder', models.CharField(blank=True, db_collation='latin1_swedish_ci', db_column='CENTER_SHOULDER', max_length=5000, null=True)),
                ('center_shoulder_left_move_count', models.IntegerField(blank=True, db_column='CENTER_SHOULDER_LEFT_MOVE_COUNT', null=True)),
                ('center_shoulder_right_move_count', models.IntegerField(blank=True, db_column='CENTER_SHOULDER_RIGHT_MOVE_COUNT', null=True)),
                ('left_hand', models.CharField(blank=True, db_collation='latin1_swedish_ci', db_column='LEFT_HAND', max_length=500, null=True)),
                ('left_hand_time', models.FloatField(blank=True, db_column='LEFT_HAND_TIME', null=True)),
                ('left_hand_move_count', models.IntegerField(blank=True, db_column='LEFT_HAND_MOVE_COUNT', null=True)),
                ('right_hand', models.CharField(blank=True, db_collation='latin1_swedish_ci', db_column='RIGHT_HAND', max_length=5000, null=True)),
                ('right_hand_time', models.FloatField(blank=True, db_column='RIGHT_HAND_TIME', null=True)),
                ('right_hand_move_count', models.IntegerField(blank=True, db_column='RIGHT_HAND_MOVE_COUNT', null=True)),
                ('gaze_x_score', models.IntegerField(blank=True, db_column='GAZE_X_SCORE', null=True)),
                ('gaze_y_score', models.IntegerField(blank=True, db_column='GAZE_Y_SCORE', null=True)),
                ('shoulder_vertical_score', models.IntegerField(blank=True, db_column='SHOULDER_VERTICAL_SCORE', null=True)),
                ('shoulder_horizon_score', models.IntegerField(blank=True, db_column='SHOULDER_HORIZON_SCORE', null=True)),
                ('face_angle_score', models.IntegerField(blank=True, db_column='FACE_ANGLE_SCORE', null=True)),
                ('gesture_score', models.IntegerField(blank=True, db_column='GESTURE_SCORE', null=True)),
                ('voice_tone', models.IntegerField(blank=True, db_column='VOICE_TONE', null=True)),
                ('voice_tone_score', models.IntegerField(blank=True, db_column='VOICE_TONE_SCORE', null=True)),
                ('voice_speed', models.IntegerField(blank=True, db_column='VOICE_SPEED', null=True)),
                ('voice_speed_score', models.IntegerField(blank=True, db_column='VOICE_SPEED_SCORE', null=True)),
                ('document_sentiment_score', models.FloatField(blank=True, db_column='DOCUMENT_SENTIMENT_SCORE', null=True)),
                ('document_sentiment_magnitude', models.FloatField(blank=True, db_column='DOCUMENT_SENTIMENT_MAGNITUDE', null=True)),
                ('str', models.CharField(blank=True, db_column='STR', max_length=2500, null=True)),
                ('qz_tts', models.CharField(blank=True, db_column='QZ_TTS', max_length=1000, null=True)),
                ('regdate', models.DateTimeField(blank=True, db_column='REGDATE', null=True)),
            ],
            options={
                'db_table': 'IM_QZ_ANALYSIS',
                'managed': False,
            },
        ),
    ]
